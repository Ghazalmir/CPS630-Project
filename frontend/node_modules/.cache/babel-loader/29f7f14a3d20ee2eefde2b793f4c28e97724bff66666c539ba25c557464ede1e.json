{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mglm8\\\\OneDrive\\\\Desktop\\\\Winter 2024\\\\CPS630\\\\project\\\\CPS630-Project\\\\frontend\\\\src\\\\components\\\\messages\\\\MessagePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport classes from \"./MessagePanel.module.css\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useUser } from \"../../userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst signedInUserFname = \"Matthew\";\nconst signedInUserLname = \"Martin\";\nconst MessagePanel = () => {\n  _s();\n  const {\n    userId,\n    setUserId\n  } = useUser();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState();\n  const [messages, setMessages] = useState();\n  const [loading, setLoading] = useState(true);\n  const [selectedConversation, setSelectedConversation] = useState();\n  useEffect(() => {\n    const socket = io(\"http://localhost:8080\", {\n      query: {\n        userId: userId\n      }\n    });\n    socket.on(\"confirmation\", msg => {\n      console.log(msg);\n    });\n    socket.on(\"newMessage\", msg => {\n      setMessages([...messages, msg]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [userId, messages]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [conversationsResponse, messagesResponse] = await Promise.all([axios.get(\"http://localhost:8080/api/messages/conversations\", {\n          params: {\n            signedInUserID: signedInUserID\n          }\n        }), axios.get(\"http://localhost:8080/api/messages/messages\", {\n          params: {\n            signedInUserID: signedInUserID\n          }\n        })]);\n        setConversations(conversationsResponse.data);\n        setMessages(messagesResponse.data);\n        console.log(conversationsResponse.data);\n        console.log(messagesResponse.data);\n        setLoading(false);\n        setSelectedConversation(window.innerWidth >= 764 ? conversationsResponse.data[0] : null);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleConversationSelect = conversation => {\n    setSelectedConversation(conversation);\n  };\n  const latestMessage = conversation => {\n    let conversationMessages = messages.filter(message => message.conversation_id === conversation.conversation_id);\n    return conversationMessages.sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp))[conversationMessages.length - 1];\n  };\n  const otherUsersName = conversation => {\n    return conversation.userid1 === signedInUserID ? conversation.user2_first_name + \" \" + conversation.user2_last_name : conversation.user1_first_name + \" \" + conversation.user1_last_name;\n  };\n  const sendMessage = async () => {\n    if (newMessage.trim() === \"\") return;\n    try {\n      // Make a POST request to your backend endpoint\n      const response = await axios.post(\"http://localhost:8080/api/messages/messages\", {\n        conversation_id: selectedConversation.conversation_id,\n        message: newMessage,\n        senderID: signedInUserID,\n        recieverID: signedInUserID === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1\n      });\n\n      // Log the response or handle it as needed\n      console.log(response.data);\n    } catch (error) {\n      // Handle errors\n      console.error(\"Error uploading message:\", error);\n    }\n    const message = {\n      conversation_id: selectedConversation.conversation_id,\n      message: newMessage,\n      message_id: uuidv4().toString(),\n      receiver_first_name: selectedConversation.userid1 === signedInUserID ? selectedConversation.user2_first_name : selectedConversation.user1_first_name,\n      receiver_id: signedInUserID === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1,\n      receiver_last_name: selectedConversation.userid1 === signedInUserID ? selectedConversation.user2_last_name : selectedConversation.user1_last_name,\n      sender_first_name: signedInUserFname,\n      sender_id: signedInUserID,\n      sender_last_name: signedInUserLname,\n      time_stamp: new Date().toISOString()\n    };\n    socket.emit(\"message\", message);\n    setMessages([...messages, message]);\n    console.log(\"Sending message:\", newMessage);\n    setNewMessage(\"\");\n  };\n  const [screenSize, setScreenSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const cropContent = (content, maxLength) => {\n    return (content === null || content === void 0 ? void 0 : content.length) > maxLength ? content.slice(0, maxLength) + \"...\" : content;\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      if (window.innerWidth >= 763 && !selectedConversation) {\n        setSelectedConversation(conversations[0]);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${screenSize.width >= 764 ? \"col-md-3\" : selectedConversation ? \"d-none\" : \"col-md-12\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.listGroupContainer,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: conversations.map(conversation => {\n                var _latestMessage;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `list-group-item ${classes.listGroupItem} ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversation_id) === conversation.conversation_id ? \"active\" : \"\"}`,\n                  onClick: () => handleConversationSelect(conversation),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: otherUsersName(conversation)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"latest-message\",\n                    children: cropContent((_latestMessage = latestMessage(conversation)) === null || _latestMessage === void 0 ? void 0 : _latestMessage.message, 80)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 12\n                  }, this)]\n                }, conversation.conversation_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 11\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${selectedConversation && screenSize.width < 764 ? \"col-md-12\" : \"col-md-9 d-none d-md-block\"}`,\n          children: [selectedConversation ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: [screenSize.width < 764 && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: () => {\n                setSelectedConversation(null);\n              },\n              children: \"\\u2B05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: otherUsersName(selectedConversation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"View Item Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No Messages to Display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.messagingPanel,\n            children: [selectedConversation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.messageContainer,\n              children: messages.filter(message => message.conversation_id === selectedConversation.conversation_id).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [message.sender_first_name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 15\n                  }, this), \" \", message.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 14\n                }, this)\n              }, message.message_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `input-group mt-3 ${classes.inputGroup}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Type your message here...\",\n                value: newMessage,\n                onChange: e => {\n                  if (selectedConversation) {\n                    setNewMessage(e.target.value);\n                  }\n                },\n                onKeyDown: e => {\n                  if (e.key === \"Enter\") {\n                    sendMessage();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: sendMessage,\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(MessagePanel, \"cVanElODnySKQ5g+zRVCCDfRH6Y=\", false, function () {\n  return [useUser];\n});\n_c = MessagePanel;\nexport default MessagePanel;\nvar _c;\n$RefreshReg$(_c, \"MessagePanel\");","map":{"version":3,"names":["React","useState","useEffect","classes","io","axios","v4","uuidv4","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","signedInUserFname","signedInUserLname","MessagePanel","_s","userId","setUserId","newMessage","setNewMessage","conversations","setConversations","messages","setMessages","loading","setLoading","selectedConversation","setSelectedConversation","socket","query","on","msg","console","log","disconnect","fetchData","conversationsResponse","messagesResponse","Promise","all","get","params","signedInUserID","data","window","innerWidth","error","handleConversationSelect","conversation","latestMessage","conversationMessages","filter","message","conversation_id","sort","a","b","Date","time_stamp","length","otherUsersName","userid1","user2_first_name","user2_last_name","user1_first_name","user1_last_name","sendMessage","trim","response","post","senderID","recieverID","userid2","message_id","toString","receiver_first_name","receiver_id","receiver_last_name","sender_first_name","sender_id","sender_last_name","toISOString","emit","screenSize","setScreenSize","width","height","innerHeight","cropContent","content","maxLength","slice","handleResize","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","listGroupContainer","map","_latestMessage","listGroupItem","onClick","header","href","messagingPanel","messageContainer","inputGroup","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/mglm8/OneDrive/Desktop/Winter 2024/CPS630/project/CPS630-Project/frontend/src/components/messages/MessagePanel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classes from \"./MessagePanel.module.css\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useUser } from \"../../userContext\";\r\n\r\nconst signedInUserFname = \"Matthew\";\r\nconst signedInUserLname = \"Martin\";\r\n\r\nconst MessagePanel = () => {\r\n\tconst { userId, setUserId } = useUser();\r\n\tconst [newMessage, setNewMessage] = useState(\"\");\r\n\tconst [conversations, setConversations] = useState();\r\n\tconst [messages, setMessages] = useState();\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [selectedConversation, setSelectedConversation] = useState();\r\n\r\n\tuseEffect(() => {\r\n    const socket = io(\"http://localhost:8080\", {\r\n      query: {\r\n        userId: userId,\r\n      },\r\n    });\r\n\r\n    socket.on(\"confirmation\", (msg) => {\r\n\t\t\tconsole.log(msg);\r\n\t\t});\r\n\r\n\t\tsocket.on(\"newMessage\", (msg) => {\r\n\t\t\tsetMessages([...messages, msg]);\r\n\t\t});\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [userId, messages]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst [conversationsResponse, messagesResponse] = await Promise.all([\r\n\t\t\t\t\taxios.get(\"http://localhost:8080/api/messages/conversations\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsignedInUserID: signedInUserID,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t\taxios.get(\"http://localhost:8080/api/messages/messages\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsignedInUserID: signedInUserID,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tsetConversations(conversationsResponse.data);\r\n\t\t\t\tsetMessages(messagesResponse.data);\r\n\t\t\t\tconsole.log(conversationsResponse.data);\r\n\t\t\t\tconsole.log(messagesResponse.data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetSelectedConversation(window.innerWidth >= 764 ? conversationsResponse.data[0] : null);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching data:\", error);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst handleConversationSelect = (conversation) => {\r\n\t\tsetSelectedConversation(conversation);\r\n\t};\r\n\r\n\tconst latestMessage = (conversation) => {\r\n\t\tlet conversationMessages = messages.filter((message) => message.conversation_id === conversation.conversation_id);\r\n\t\treturn conversationMessages.sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp))[\r\n\t\t\tconversationMessages.length - 1\r\n\t\t];\r\n\t};\r\n\r\n\tconst otherUsersName = (conversation) => {\r\n\t\treturn conversation.userid1 === signedInUserID\r\n\t\t\t? conversation.user2_first_name + \" \" + conversation.user2_last_name\r\n\t\t\t: conversation.user1_first_name + \" \" + conversation.user1_last_name;\r\n\t};\r\n\r\n\r\n\tconst sendMessage = async () => {\r\n\t\tif (newMessage.trim() === \"\") return;\r\n\t\ttry {\r\n\t\t\t// Make a POST request to your backend endpoint\r\n\t\t\tconst response = await axios.post(\"http://localhost:8080/api/messages/messages\", {\r\n\t\t\t\tconversation_id: selectedConversation.conversation_id,\r\n\t\t\t\tmessage: newMessage,\r\n\t\t\t\tsenderID: signedInUserID,\r\n\t\t\t\trecieverID:\r\n\t\t\t\t\tsignedInUserID === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1,\r\n\t\t\t});\r\n\r\n\t\t\t// Log the response or handle it as needed\r\n\t\t\tconsole.log(response.data);\r\n\t\t} catch (error) {\r\n\t\t\t// Handle errors\r\n\t\t\tconsole.error(\"Error uploading message:\", error);\r\n\t\t}\r\n\r\n\t\tconst message = {\r\n\t\t\tconversation_id: selectedConversation.conversation_id,\r\n\t\t\tmessage: newMessage,\r\n\t\t\tmessage_id: uuidv4().toString(),\r\n\t\t\treceiver_first_name:\r\n\t\t\t\tselectedConversation.userid1 === signedInUserID\r\n\t\t\t\t\t? selectedConversation.user2_first_name\r\n\t\t\t\t\t: selectedConversation.user1_first_name,\r\n\t\t\treceiver_id:\r\n\t\t\t\tsignedInUserID === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1,\r\n\t\t\treceiver_last_name:\r\n\t\t\t\tselectedConversation.userid1 === signedInUserID\r\n\t\t\t\t\t? selectedConversation.user2_last_name\r\n\t\t\t\t\t: selectedConversation.user1_last_name,\r\n\t\t\tsender_first_name: signedInUserFname,\r\n\t\t\tsender_id: signedInUserID,\r\n\t\t\tsender_last_name: signedInUserLname,\r\n\t\t\ttime_stamp: new Date().toISOString(),\r\n\t\t};\r\n\r\n\t\tsocket.emit(\"message\", message);\r\n\t\tsetMessages([...messages, message]);\r\n\t\tconsole.log(\"Sending message:\", newMessage);\r\n\t\tsetNewMessage(\"\");\r\n\t};\r\n\r\n\tconst [screenSize, setScreenSize] = useState({\r\n\t\twidth: window.innerWidth,\r\n\t\theight: window.innerHeight,\r\n\t});\r\n\r\n\tconst cropContent = (content, maxLength) => {\r\n\t\treturn content?.length > maxLength ? content.slice(0, maxLength) + \"...\" : content;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetScreenSize({\r\n\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t});\r\n\t\t\tif (window.innerWidth >= 763 && !selectedConversation) {\r\n\t\t\t\tsetSelectedConversation(conversations[0]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\r\n\t\t// Clean up the event listener when the component unmounts\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div>Loading...</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className={`${screenSize.width >= 764 ? \"col-md-3\" : selectedConversation ? \"d-none\" : \"col-md-12\"}`}>\r\n\t\t\t\t\t\t\t<h2>Conversations</h2>\r\n\t\t\t\t\t\t\t<div className={classes.listGroupContainer}>\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{conversations.map((conversation) => (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tkey={conversation.conversation_id}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`list-group-item ${classes.listGroupItem} ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedConversation?.conversation_id === conversation.conversation_id ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleConversationSelect(conversation)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{otherUsersName(conversation)}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"latest-message\">{cropContent(latestMessage(conversation)?.message, 80)}</div>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\t\tselectedConversation && screenSize.width < 764 ? \"col-md-12\" : \"col-md-9 d-none d-md-block\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{selectedConversation ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t\t\t\t{screenSize.width < 764 && (\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedConversation(null);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t&#x2B05;\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<h2>{otherUsersName(selectedConversation)}</h2>\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">View Item Details</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t\t\t\t<h2>No Messages to Display</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className={classes.messagingPanel}>\r\n\t\t\t\t\t\t\t\t{selectedConversation && (\r\n\t\t\t\t\t\t\t\t\t<div className={classes.messageContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{messages\r\n\t\t\t\t\t\t\t\t\t\t\t.filter((message) => message.conversation_id === selectedConversation.conversation_id)\r\n\t\t\t\t\t\t\t\t\t\t\t.map((message) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={message.message_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{message.sender_first_name}:</strong> {message.message}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div className={`input-group mt-3 ${classes.inputGroup}`}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type your message here...\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={newMessage}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (selectedConversation) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetNewMessage(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsendMessage();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={sendMessage}>\r\n\t\t\t\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MessagePanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,iBAAiB,GAAG,SAAS;AACnC,MAAMC,iBAAiB,GAAG,QAAQ;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGV,OAAO,CAAC,CAAC;EACvC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG3B,QAAQ,CAAC,CAAC;EAElEC,SAAS,CAAC,MAAM;IACb,MAAM2B,MAAM,GAAGzB,EAAE,CAAC,uBAAuB,EAAE;MACzC0B,KAAK,EAAE;QACLb,MAAM,EAAEA;MACV;IACF,CAAC,CAAC;IAEFY,MAAM,CAACE,EAAE,CAAC,cAAc,EAAGC,GAAG,IAAK;MACpCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACjB,CAAC,CAAC;IAEFH,MAAM,CAACE,EAAE,CAAC,YAAY,EAAGC,GAAG,IAAK;MAChCR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAES,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC;IAEA,OAAO,MAAM;MACXH,MAAM,CAACM,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAAClB,MAAM,EAAEM,QAAQ,CAAC,CAAC;EAEvBrB,SAAS,CAAC,MAAM;IACf,MAAMkC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAM,CAACC,qBAAqB,EAAEC,gBAAgB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnEnC,KAAK,CAACoC,GAAG,CAAC,kDAAkD,EAAE;UAC7DC,MAAM,EAAE;YACPC,cAAc,EAAEA;UACjB;QACD,CAAC,CAAC,EACFtC,KAAK,CAACoC,GAAG,CAAC,6CAA6C,EAAE;UACxDC,MAAM,EAAE;YACPC,cAAc,EAAEA;UACjB;QACD,CAAC,CAAC,CACF,CAAC;QAEFrB,gBAAgB,CAACe,qBAAqB,CAACO,IAAI,CAAC;QAC5CpB,WAAW,CAACc,gBAAgB,CAACM,IAAI,CAAC;QAClCX,OAAO,CAACC,GAAG,CAACG,qBAAqB,CAACO,IAAI,CAAC;QACvCX,OAAO,CAACC,GAAG,CAACI,gBAAgB,CAACM,IAAI,CAAC;QAClClB,UAAU,CAAC,KAAK,CAAC;QACjBE,uBAAuB,CAACiB,MAAM,CAACC,UAAU,IAAI,GAAG,GAAGT,qBAAqB,CAACO,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;MACzF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACfd,OAAO,CAACc,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CrB,UAAU,CAAC,KAAK,CAAC;MAClB;IACD,CAAC;IAEDU,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,wBAAwB,GAAIC,YAAY,IAAK;IAClDrB,uBAAuB,CAACqB,YAAY,CAAC;EACtC,CAAC;EAED,MAAMC,aAAa,GAAID,YAAY,IAAK;IACvC,IAAIE,oBAAoB,GAAG5B,QAAQ,CAAC6B,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,eAAe,KAAKL,YAAY,CAACK,eAAe,CAAC;IACjH,OAAOH,oBAAoB,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAC,CAC1FR,oBAAoB,CAACS,MAAM,GAAG,CAAC,CAC/B;EACF,CAAC;EAED,MAAMC,cAAc,GAAIZ,YAAY,IAAK;IACxC,OAAOA,YAAY,CAACa,OAAO,KAAKnB,cAAc,GAC3CM,YAAY,CAACc,gBAAgB,GAAG,GAAG,GAAGd,YAAY,CAACe,eAAe,GAClEf,YAAY,CAACgB,gBAAgB,GAAG,GAAG,GAAGhB,YAAY,CAACiB,eAAe;EACtE,CAAC;EAGD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIhD,UAAU,CAACiD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC9B,IAAI;MACH;MACA,MAAMC,QAAQ,GAAG,MAAMhE,KAAK,CAACiE,IAAI,CAAC,6CAA6C,EAAE;QAChFhB,eAAe,EAAE3B,oBAAoB,CAAC2B,eAAe;QACrDD,OAAO,EAAElC,UAAU;QACnBoD,QAAQ,EAAE5B,cAAc;QACxB6B,UAAU,EACT7B,cAAc,KAAKhB,oBAAoB,CAACmC,OAAO,GAAGnC,oBAAoB,CAAC8C,OAAO,GAAG9C,oBAAoB,CAACmC;MACxG,CAAC,CAAC;;MAEF;MACA7B,OAAO,CAACC,GAAG,CAACmC,QAAQ,CAACzB,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACf;MACAd,OAAO,CAACc,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACjD;IAEA,MAAMM,OAAO,GAAG;MACfC,eAAe,EAAE3B,oBAAoB,CAAC2B,eAAe;MACrDD,OAAO,EAAElC,UAAU;MACnBuD,UAAU,EAAEnE,MAAM,CAAC,CAAC,CAACoE,QAAQ,CAAC,CAAC;MAC/BC,mBAAmB,EAClBjD,oBAAoB,CAACmC,OAAO,KAAKnB,cAAc,GAC5ChB,oBAAoB,CAACoC,gBAAgB,GACrCpC,oBAAoB,CAACsC,gBAAgB;MACzCY,WAAW,EACVlC,cAAc,KAAKhB,oBAAoB,CAACmC,OAAO,GAAGnC,oBAAoB,CAAC8C,OAAO,GAAG9C,oBAAoB,CAACmC,OAAO;MAC9GgB,kBAAkB,EACjBnD,oBAAoB,CAACmC,OAAO,KAAKnB,cAAc,GAC5ChB,oBAAoB,CAACqC,eAAe,GACpCrC,oBAAoB,CAACuC,eAAe;MACxCa,iBAAiB,EAAElE,iBAAiB;MACpCmE,SAAS,EAAErC,cAAc;MACzBsC,gBAAgB,EAAEnE,iBAAiB;MACnC6C,UAAU,EAAE,IAAID,IAAI,CAAC,CAAC,CAACwB,WAAW,CAAC;IACpC,CAAC;IAEDrD,MAAM,CAACsD,IAAI,CAAC,SAAS,EAAE9B,OAAO,CAAC;IAC/B7B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE8B,OAAO,CAAC,CAAC;IACnCpB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,UAAU,CAAC;IAC3CC,aAAa,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAM,CAACgE,UAAU,EAAEC,aAAa,CAAC,GAAGpF,QAAQ,CAAC;IAC5CqF,KAAK,EAAEzC,MAAM,CAACC,UAAU;IACxByC,MAAM,EAAE1C,MAAM,CAAC2C;EAChB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAK;IAC3C,OAAO,CAAAD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE9B,MAAM,IAAG+B,SAAS,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,EAAED,SAAS,CAAC,GAAG,KAAK,GAAGD,OAAO;EACnF,CAAC;EAEDxF,SAAS,CAAC,MAAM;IACf,MAAM2F,YAAY,GAAGA,CAAA,KAAM;MAC1BR,aAAa,CAAC;QACbC,KAAK,EAAEzC,MAAM,CAACC,UAAU;QACxByC,MAAM,EAAE1C,MAAM,CAAC2C;MAChB,CAAC,CAAC;MACF,IAAI3C,MAAM,CAACC,UAAU,IAAI,GAAG,IAAI,CAACnB,oBAAoB,EAAE;QACtDC,uBAAuB,CAACP,aAAa,CAAC,CAAC,CAAC,CAAC;MAC1C;IACD,CAAC;IAEDwB,MAAM,CAACiD,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACZhD,MAAM,CAACkD,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACnD,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCnF,OAAA,CAAAE,SAAA;IAAAoF,QAAA,EACEvE,OAAO,gBACPf,OAAA;MAAAsF,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAErB1F,OAAA;MAAK2F,SAAS,EAAC,iBAAiB;MAAAL,QAAA,eAC/BtF,OAAA;QAAK2F,SAAS,EAAC,KAAK;QAAAL,QAAA,gBACnBtF,OAAA;UAAK2F,SAAS,EAAG,GAAEjB,UAAU,CAACE,KAAK,IAAI,GAAG,GAAG,UAAU,GAAG3D,oBAAoB,GAAG,QAAQ,GAAG,WAAY,EAAE;UAAAqE,QAAA,gBACzGtF,OAAA;YAAAsF,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtB1F,OAAA;YAAK2F,SAAS,EAAElG,OAAO,CAACmG,kBAAmB;YAAAN,QAAA,eAC1CtF,OAAA;cAAI2F,SAAS,EAAC,YAAY;cAAAL,QAAA,EACxB3E,aAAa,CAACkF,GAAG,CAAEtD,YAAY;gBAAA,IAAAuD,cAAA;gBAAA,oBAC/B9F,OAAA;kBAEC2F,SAAS,EAAG,mBAAkBlG,OAAO,CAACsG,aAAc,IACnD,CAAA9E,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAE2B,eAAe,MAAKL,YAAY,CAACK,eAAe,GAAG,QAAQ,GAAG,EACpF,EAAE;kBACHoD,OAAO,EAAEA,CAAA,KAAM1D,wBAAwB,CAACC,YAAY,CAAE;kBAAA+C,QAAA,gBAEtDtF,OAAA;oBAAAsF,QAAA,eACCtF,OAAA;sBAAAsF,QAAA,EAASnC,cAAc,CAACZ,YAAY;oBAAC;sBAAAgD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3C,CAAC,eACN1F,OAAA;oBAAK2F,SAAS,EAAC,gBAAgB;oBAAAL,QAAA,EAAEP,WAAW,EAAAe,cAAA,GAACtD,aAAa,CAACD,YAAY,CAAC,cAAAuD,cAAA,uBAA3BA,cAAA,CAA6BnD,OAAO,EAAE,EAAE;kBAAC;oBAAA4C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA,GATxFnD,YAAY,CAACK,eAAe;kBAAA2C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAU9B,CAAC;cAAA,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACN1F,OAAA;UACC2F,SAAS,EAAG,GACX1E,oBAAoB,IAAIyD,UAAU,CAACE,KAAK,GAAG,GAAG,GAAG,WAAW,GAAG,4BAC/D,EAAE;UAAAU,QAAA,GAEFrE,oBAAoB,gBACpBjB,OAAA;YAAK2F,SAAS,EAAElG,OAAO,CAACwG,MAAO;YAAAX,QAAA,GAC7BZ,UAAU,CAACE,KAAK,GAAG,GAAG,iBACtB5E,OAAA;cACCkG,IAAI,EAAC,GAAG;cACRF,OAAO,EAAEA,CAAA,KAAM;gBACd9E,uBAAuB,CAAC,IAAI,CAAC;cAC9B,CAAE;cAAAoE,QAAA,EACF;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACH,eACD1F,OAAA;cAAAsF,QAAA,EAAKnC,cAAc,CAAClC,oBAAoB;YAAC;cAAAsE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/C1F,OAAA;cAAQ2F,SAAS,EAAC,iBAAiB;cAAAL,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,gBAEN1F,OAAA;YAAK2F,SAAS,EAAElG,OAAO,CAACwG,MAAO;YAAAX,QAAA,eAC9BtF,OAAA;cAAAsF,QAAA,EAAI;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CACL,eACD1F,OAAA;YAAK2F,SAAS,EAAElG,OAAO,CAAC0G,cAAe;YAAAb,QAAA,GACrCrE,oBAAoB,iBACpBjB,OAAA;cAAK2F,SAAS,EAAElG,OAAO,CAAC2G,gBAAiB;cAAAd,QAAA,EACvCzE,QAAQ,CACP6B,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,eAAe,KAAK3B,oBAAoB,CAAC2B,eAAe,CAAC,CACrFiD,GAAG,CAAElD,OAAO,iBACZ3C,OAAA;gBAAAsF,QAAA,eACCtF,OAAA;kBAAAsF,QAAA,gBACCtF,OAAA;oBAAAsF,QAAA,GAAS3C,OAAO,CAAC0B,iBAAiB,EAAC,GAAC;kBAAA;oBAAAkB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAAC/C,OAAO,CAACA,OAAO;gBAAA;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5D;cAAC,GAHK/C,OAAO,CAACqB,UAAU;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIvB,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACL,eACD1F,OAAA;cAAK2F,SAAS,EAAG,oBAAmBlG,OAAO,CAAC4G,UAAW,EAAE;cAAAf,QAAA,gBACxDtF,OAAA;gBACCsG,IAAI,EAAC,MAAM;gBACXX,SAAS,EAAC,cAAc;gBACxBY,WAAW,EAAC,2BAA2B;gBACvCC,KAAK,EAAE/F,UAAW;gBAClBgG,QAAQ,EAAGC,CAAC,IAAK;kBAChB,IAAIzF,oBAAoB,EAAE;oBACzBP,aAAa,CAACgG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;kBAC9B;gBACD,CAAE;gBACFI,SAAS,EAAGF,CAAC,IAAK;kBACjB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;oBACtBpD,WAAW,CAAC,CAAC;kBACd;gBACD;cAAE;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACF1F,OAAA;gBAAK2F,SAAS,EAAC,oBAAoB;gBAAAL,QAAA,eAClCtF,OAAA;kBAAQ2F,SAAS,EAAC,iBAAiB;kBAACK,OAAO,EAAEvC,WAAY;kBAAA6B,QAAA,EAAC;gBAE1D;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACL,gBACA,CAAC;AAEL,CAAC;AAACpF,EAAA,CAvPID,YAAY;EAAA,QACaP,OAAO;AAAA;AAAAgH,EAAA,GADhCzG,YAAY;AAyPlB,eAAeA,YAAY;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}