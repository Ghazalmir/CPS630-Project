{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mglm8\\\\OneDrive\\\\Desktop\\\\Winter 2024\\\\CPS630\\\\project\\\\CPS630-Project\\\\frontend\\\\src\\\\components\\\\messages\\\\MessagePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport classes from \"./MessagePanel.module.css\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080\");\n\n// const conversations = [\n// \t{ id: 1, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\n// \t{ id: 2, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\n// \t{ id: 3, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\n// \t{ id: 4, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\n// \t{ id: 5, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\n// \t{ id: 6, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\n// \t{ id: 7, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\n// \t{ id: 8, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\n// \t{ id: 9, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\n// \t{ id: 10, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\n// \t{ id: 11, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\n// \t{ id: 12, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\n// \t{ id: 13, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\n// \t{ id: 14, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\n// \t{ id: 15, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\n// ];\n\nconst signedInUserName = \"Matt\";\nlet latestID = 11; //temporary until we have backend\n\n// const messages = [\n// \t{ id: 1, conversation_id: 1, sender: \"John Doe\", content: \"Hey I'd like to buy your item!\", timeSent: 0 },\n// \t{ id: 2, conversation_id: 1, sender: \"Matt\", content: \"Okay! when are you free to meet?\", timeSent: 1 },\n// \t{ id: 3, conversation_id: 1, sender: \"John Doe\", content: \"Would tomorrow at 5pm work for you?\", timeSent: 2 },\n// \t{ id: 4, conversation_id: 1, sender: \"Matt\", content: \"Yes that's perfect. see you then.\", timeSent: 3 },\n// \t{\n// \t\tid: 5,\n// \t\tconversation_id: 2,\n// \t\tsender: \"Matt\",\n// \t\tcontent: \"Hey I'd like to buy your textbook, would you take $5?\",\n// \t\ttimeSent: 2,\n// \t},\n// \t{ id: 6, conversation_id: 2, sender: \"Jane Smith\", content: \"Not a chance\", timeSent: 8 },\n// \t{ id: 7, conversation_id: 2, sender: \"Matt\", content: \"that ripped up book isn't even worth a dime\", timeSent: 10 },\n// \t{ id: 8, conversation_id: 2, sender: \"Jane Smith\", content: \"fuck off\", timeSent: 11 },\n// \t{ id: 9, conversation_id: 3, sender: \"Matt\", content: \"Hey I'm interested in your tutoring services!\", timeSent: 1 },\n// \t{\n// \t\tid: 10,\n// \t\tconversation_id: 3,\n// \t\tsender: \"Jane Smith\",\n// \t\tcontent: \"Not after what you said about my textbook!\",\n// \t\ttimeSent: 3,\n// \t},\n// \t{ id: 11, conversation_id: 3, sender: \"John Doe\", content: \"this is so unfair.\", timeSent: 10 },\n// ];\n\nconst signedInUserID = \"952944778915676161\";\nconst MessagePanel = () => {\n  _s();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState();\n  const [messages, setMessages] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedConversation, setSelectedConversation] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [conversationsResponse, messagesResponse] = await Promise.all([axios.get(\"http://localhost:8080/api/messages/conversations\", {\n          params: {\n            signedInUserID: signedInUserID\n          }\n        }), axios.get(\"http://localhost:8080/api/messages/messages\", {\n          params: {\n            signedInUserID: signedInUserID\n          }\n        })]);\n        console.log(messages);\n        console.log(conversations);\n        setConversations(conversationsResponse.data);\n        setMessages(messagesResponse.data);\n        setIsLoading(false);\n        setSelectedConversation(window.innerWidth >= 764 ? conversations[0] : null);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleConversationSelect = conversation => {\n    setSelectedConversation(conversation);\n  };\n  const latestMessage = conversation => {\n    let conversationMessages = messages.filter(message => message.conversation_id === conversation.id);\n    return conversationMessages.sort((a, b) => a.timeSent - b.timeSent)[conversationMessages.length - 1];\n  };\n  const otherUsersName = conversation => {\n    return conversation.name1 === signedInUserName ? conversation.name2 : conversation.name1;\n  };\n  const sendMessage = () => {\n    if (newMessage.trim() === \"\") return;\n    latestID = latestID + 1;\n    messages.push({\n      id: latestID,\n      conversation_id: selectedConversation.id,\n      sender: signedInUserName,\n      content: newMessage,\n      timeSent: latestMessage(selectedConversation) ? latestMessage(selectedConversation).timeSent + 1 : 0 //will change once backend\n    });\n    socket.emit(\"message\", {\n      id: latestID,\n      conversation_id: selectedConversation.id,\n      sender: signedInUserName,\n      content: newMessage,\n      timeSent: latestMessage(selectedConversation) ? latestMessage(selectedConversation).timeSent + 1 : 0 //will change once backend\n    });\n    console.log(\"Sending message:\", newMessage);\n    setNewMessage(\"\");\n  };\n  const [screenSize, setScreenSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const cropContent = (content, maxLength) => {\n    return (content === null || content === void 0 ? void 0 : content.length) > maxLength ? content.slice(0, maxLength) + \"...\" : content;\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      if (window.innerWidth >= 763 && !selectedConversation) {\n        setSelectedConversation(conversations[0]);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${screenSize.width >= 764 ? \"col-md-3\" : selectedConversation ? \"d-none\" : \"col-md-12\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.listGroupContainer,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: conversations.map(conversation => {\n                var _latestMessage;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `list-group-item ${classes.listGroupItem} ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id ? \"active\" : \"\"}`,\n                  onClick: () => handleConversationSelect(conversation),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: otherUsersName(conversation)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 10\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"latest-message\",\n                    children: cropContent((_latestMessage = latestMessage(conversation)) === null || _latestMessage === void 0 ? void 0 : _latestMessage.content, 80)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 9\n                  }, this)]\n                }, conversation.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 8\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${selectedConversation && screenSize.width < 764 ? \"col-md-12\" : \"col-md-9 d-none d-md-block\"}`,\n          children: [selectedConversation ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: [screenSize.width < 764 && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: () => {\n                setSelectedConversation(null);\n              },\n              children: \"\\u2B05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: otherUsersName(selectedConversation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"View Item Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 6\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No Messages to Display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.messagingPanel,\n            children: [selectedConversation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.messageContainer,\n              children: messages.filter(message => message.conversation_id === selectedConversation.id).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [message.sender, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 12\n                  }, this), \" \", message.content]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 11\n                }, this)\n              }, message.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `input-group mt-3 ${classes.inputGroup}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Type your message here...\",\n                value: newMessage,\n                onChange: e => {\n                  if (selectedConversation) {\n                    setNewMessage(e.target.value);\n                  }\n                },\n                onKeyDown: e => {\n                  if (e.key === \"Enter\") {\n                    sendMessage();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: sendMessage,\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 8\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(MessagePanel, \"rRviKzMBee6qQBYTnDtAtIjnjNM=\");\n_c = MessagePanel;\nexport default MessagePanel;\nvar _c;\n$RefreshReg$(_c, \"MessagePanel\");","map":{"version":3,"names":["React","useState","useEffect","classes","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","signedInUserName","latestID","signedInUserID","MessagePanel","_s","newMessage","setNewMessage","conversations","setConversations","messages","setMessages","isLoading","setIsLoading","selectedConversation","setSelectedConversation","fetchData","conversationsResponse","messagesResponse","Promise","all","get","params","console","log","data","window","innerWidth","error","handleConversationSelect","conversation","latestMessage","conversationMessages","filter","message","conversation_id","id","sort","a","b","timeSent","length","otherUsersName","name1","name2","sendMessage","trim","push","sender","content","emit","screenSize","setScreenSize","width","height","innerHeight","cropContent","maxLength","slice","handleResize","addEventListener","removeEventListener","children","loading","fileName","_jsxFileName","lineNumber","columnNumber","className","listGroupContainer","map","_latestMessage","listGroupItem","onClick","header","href","messagingPanel","messageContainer","inputGroup","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/mglm8/OneDrive/Desktop/Winter 2024/CPS630/project/CPS630-Project/frontend/src/components/messages/MessagePanel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classes from \"./MessagePanel.module.css\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nconst socket = io(\"http://localhost:8080\");\r\n\r\n// const conversations = [\r\n// \t{ id: 1, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\r\n// \t{ id: 2, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\r\n// \t{ id: 3, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\r\n// \t{ id: 4, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\r\n// \t{ id: 5, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\r\n// \t{ id: 6, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\r\n// \t{ id: 7, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\r\n// \t{ id: 8, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\r\n// \t{ id: 9, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\r\n// \t{ id: 10, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\r\n// \t{ id: 11, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\r\n// \t{ id: 12, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\r\n// \t{ id: 13, listingName: \"bike\", listingLink: \"example\", name1: \"John Doe\", name2: \"Matt\" },\r\n// \t{ id: 14, listingName: \"math textbook\", listingLink: \"example2\", name1: \"Jane Smith\", name2: \"Matt\" },\r\n// \t{ id: 15, listingName: \"english tutoring\", listingLink: \"example3\", name1: \"Matt\", name2: \"Jane Smith\" },\r\n// ];\r\n\r\nconst signedInUserName = \"Matt\";\r\nlet latestID = 11; //temporary until we have backend\r\n\r\n// const messages = [\r\n// \t{ id: 1, conversation_id: 1, sender: \"John Doe\", content: \"Hey I'd like to buy your item!\", timeSent: 0 },\r\n// \t{ id: 2, conversation_id: 1, sender: \"Matt\", content: \"Okay! when are you free to meet?\", timeSent: 1 },\r\n// \t{ id: 3, conversation_id: 1, sender: \"John Doe\", content: \"Would tomorrow at 5pm work for you?\", timeSent: 2 },\r\n// \t{ id: 4, conversation_id: 1, sender: \"Matt\", content: \"Yes that's perfect. see you then.\", timeSent: 3 },\r\n// \t{\r\n// \t\tid: 5,\r\n// \t\tconversation_id: 2,\r\n// \t\tsender: \"Matt\",\r\n// \t\tcontent: \"Hey I'd like to buy your textbook, would you take $5?\",\r\n// \t\ttimeSent: 2,\r\n// \t},\r\n// \t{ id: 6, conversation_id: 2, sender: \"Jane Smith\", content: \"Not a chance\", timeSent: 8 },\r\n// \t{ id: 7, conversation_id: 2, sender: \"Matt\", content: \"that ripped up book isn't even worth a dime\", timeSent: 10 },\r\n// \t{ id: 8, conversation_id: 2, sender: \"Jane Smith\", content: \"fuck off\", timeSent: 11 },\r\n// \t{ id: 9, conversation_id: 3, sender: \"Matt\", content: \"Hey I'm interested in your tutoring services!\", timeSent: 1 },\r\n// \t{\r\n// \t\tid: 10,\r\n// \t\tconversation_id: 3,\r\n// \t\tsender: \"Jane Smith\",\r\n// \t\tcontent: \"Not after what you said about my textbook!\",\r\n// \t\ttimeSent: 3,\r\n// \t},\r\n// \t{ id: 11, conversation_id: 3, sender: \"John Doe\", content: \"this is so unfair.\", timeSent: 10 },\r\n// ];\r\n\r\nconst signedInUserID = \"952944778915676161\";\r\n\r\nconst MessagePanel = () => {\r\n\tconst [newMessage, setNewMessage] = useState(\"\");\r\n\tconst [conversations, setConversations] = useState();\r\n\tconst [messages, setMessages] = useState();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [selectedConversation, setSelectedConversation] = useState();\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst [conversationsResponse, messagesResponse] = await Promise.all([\r\n\t\t\t\t\taxios.get(\"http://localhost:8080/api/messages/conversations\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsignedInUserID: signedInUserID,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t\taxios.get(\"http://localhost:8080/api/messages/messages\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsignedInUserID: signedInUserID,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t]);\r\n\t\t\t\tconsole.log(messages)\r\n\t\t\t\tconsole.log(conversations)\r\n\t\t\t\tsetConversations(conversationsResponse.data);\r\n\t\t\t\tsetMessages(messagesResponse.data);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetSelectedConversation(window.innerWidth >= 764 ? conversations[0] : null)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching data:\", error);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst handleConversationSelect = (conversation) => {\r\n\t\tsetSelectedConversation(conversation);\r\n\t};\r\n\r\n\tconst latestMessage = (conversation) => {\r\n\t\tlet conversationMessages = messages.filter((message) => message.conversation_id === conversation.id);\r\n\t\treturn conversationMessages.sort((a, b) => a.timeSent - b.timeSent)[conversationMessages.length - 1];\r\n\t};\r\n\r\n\tconst otherUsersName = (conversation) => {\r\n\t\treturn conversation.name1 === signedInUserName ? conversation.name2 : conversation.name1;\r\n\t};\r\n\r\n\tconst sendMessage = () => {\r\n\t\tif (newMessage.trim() === \"\") return;\r\n\t\tlatestID = latestID + 1;\r\n\t\tmessages.push({\r\n\t\t\tid: latestID,\r\n\t\t\tconversation_id: selectedConversation.id,\r\n\t\t\tsender: signedInUserName,\r\n\t\t\tcontent: newMessage,\r\n\t\t\ttimeSent: latestMessage(selectedConversation) ? latestMessage(selectedConversation).timeSent + 1 : 0, //will change once backend\r\n\t\t});\r\n\r\n\t\tsocket.emit(\"message\", {\r\n\t\t\tid: latestID,\r\n\t\t\tconversation_id: selectedConversation.id,\r\n\t\t\tsender: signedInUserName,\r\n\t\t\tcontent: newMessage,\r\n\t\t\ttimeSent: latestMessage(selectedConversation) ? latestMessage(selectedConversation).timeSent + 1 : 0, //will change once backend\r\n\t\t});\r\n\r\n\t\tconsole.log(\"Sending message:\", newMessage);\r\n\t\tsetNewMessage(\"\");\r\n\t};\r\n\r\n\tconst [screenSize, setScreenSize] = useState({\r\n\t\twidth: window.innerWidth,\r\n\t\theight: window.innerHeight,\r\n\t});\r\n\r\n\tconst cropContent = (content, maxLength) => {\r\n\t\treturn content?.length > maxLength ? content.slice(0, maxLength) + \"...\" : content;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetScreenSize({\r\n\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t});\r\n\t\t\tif (window.innerWidth >= 763 && !selectedConversation) {\r\n\t\t\t\tsetSelectedConversation(conversations[0]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\r\n\t\t// Clean up the event listener when the component unmounts\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (<>\r\n\t\t{loading ? (\r\n\t\t\t<div>Loading...</div>\r\n\t\t) : (<div className=\"container-fluid\">\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className={`${screenSize.width >= 764 ? \"col-md-3\" : selectedConversation ? \"d-none\" : \"col-md-12\"}`}>\r\n\t\t\t\t<h2>Conversations</h2>\r\n\t\t\t\t<div className={classes.listGroupContainer}>\r\n\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t{conversations.map((conversation) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={conversation.id}\r\n\t\t\t\t\t\t\t\tclassName={`list-group-item ${classes.listGroupItem} ${\r\n\t\t\t\t\t\t\t\t\tselectedConversation?.id === conversation.id ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\tonClick={() => handleConversationSelect(conversation)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<strong>{otherUsersName(conversation)}</strong>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"latest-message\">{cropContent(latestMessage(conversation)?.content, 80)}</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`${selectedConversation && screenSize.width < 764 ? \"col-md-12\" : \"col-md-9 d-none d-md-block\"}`}\r\n\t\t\t>\r\n\t\t\t\t{selectedConversation ? (\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t{screenSize.width < 764 && (\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetSelectedConversation(null);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t&#x2B05;\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<h2>{otherUsersName(selectedConversation)}</h2>\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\">View Item Details</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t<h2>No Messages to Display</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={classes.messagingPanel}>\r\n\t\t\t\t\t{selectedConversation && (\r\n\t\t\t\t\t\t<div className={classes.messageContainer}>\r\n\t\t\t\t\t\t\t{messages\r\n\t\t\t\t\t\t\t\t.filter((message) => message.conversation_id === selectedConversation.id)\r\n\t\t\t\t\t\t\t\t.map((message) => (\r\n\t\t\t\t\t\t\t\t\t<div key={message.id}>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>{message.sender}:</strong> {message.content}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className={`input-group mt-3 ${classes.inputGroup}`}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tplaceholder=\"Type your message here...\"\r\n\t\t\t\t\t\t\tvalue={newMessage}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tif (selectedConversation) {\r\n\t\t\t\t\t\t\t\t\tsetNewMessage(e.target.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\t\tsendMessage();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={sendMessage}>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>)}\r\n\t\t</>\r\n\t\t\r\n\t);\r\n};\r\n\r\nexport default MessagePanel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}