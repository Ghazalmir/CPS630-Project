{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mglm8\\\\OneDrive\\\\Desktop\\\\Winter 2024\\\\CPS630\\\\project\\\\CPS630-Project\\\\frontend\\\\src\\\\components\\\\messages\\\\MessagePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport classes from \"./MessagePanel.module.css\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useUser } from \"../../userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessagePanel = () => {\n  _s();\n  const {\n    userId,\n    setUserId\n  } = useUser();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState(null);\n  const [messages, setMessages] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:8080\", {\n      query: {\n        userId: userId\n      }\n    });\n    newSocket.on(\"confirmation\", msg => {\n      console.log(msg);\n    });\n    newSocket.on(\"newMessage\", msg => {\n      setMessages([...messages, msg]);\n    });\n    setSocket(newSocket);\n\n    // return () => {\n    //   newSocket.disconnect();\n    // };\n  }, [userId, messages]);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/profile/details\", {\n          params: {\n            signedInUserID: userId\n          }\n        });\n        setUserData(response.data[0]);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [conversationsResponse, messagesResponse] = await Promise.all([axios.get(\"http://localhost:8080/api/messages/conversations\", {\n          params: {\n            signedInUserID: userId\n          }\n        }), axios.get(\"http://localhost:8080/api/messages/messages\", {\n          params: {\n            signedInUserID: userId\n          }\n        })]);\n        setConversations(conversationsResponse.data);\n        setMessages(messagesResponse.data);\n        setLoading(false);\n        setSelectedConversation(window.innerWidth >= 764 ? conversationsResponse.data[0] : null);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    if (userData) {\n      fetchData();\n    }\n  }, [userId, userData]);\n  const handleConversationSelect = conversation => {\n    setSelectedConversation(conversation);\n  };\n  const latestMessage = conversation => {\n    let conversationMessages = messages.filter(message => message.conversation_id === conversation.conversation_id);\n    return conversationMessages.sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp))[conversationMessages.length - 1];\n  };\n  const otherUsersName = conversation => {\n    return conversation.userid1 === userId ? conversation.user2_first_name + \" \" + conversation.user2_last_name : conversation.user1_first_name + \" \" + conversation.user1_last_name;\n  };\n  const sendMessage = async () => {\n    if (newMessage.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/messages/messages\", {\n        conversation_id: selectedConversation.conversation_id,\n        message: newMessage,\n        senderID: userId,\n        recieverID: userId === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1\n      });\n    } catch (error) {\n      console.error(\"Error uploading message:\", error);\n    }\n    const message = {\n      conversation_id: selectedConversation.conversation_id,\n      message: newMessage,\n      message_id: uuidv4().toString(),\n      receiver_first_name: selectedConversation.userid1 === userId ? selectedConversation.user2_first_name : selectedConversation.user1_first_name,\n      receiver_id: userId === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1,\n      receiver_last_name: selectedConversation.userid1 === userId ? selectedConversation.user2_last_name : selectedConversation.user1_last_name,\n      sender_first_name: userData.first_name,\n      sender_id: userId,\n      sender_last_name: userData.last_name,\n      time_stamp: new Date().toISOString()\n    };\n    socket.emit(\"message\", message);\n    setMessages([...messages, message]);\n    // console.log(messages.filter((message) => message.conversation_id === selectedConversation.conversation_id)\n    // .sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp)))\n    // console.log(messages)\n    setNewMessage(\"\");\n  };\n  useEffect(() => {\n    if (messages) {\n      console.log(messages.filter(message => message.conversation_id === selectedConversation.conversation_id).map(message => {\n        return {\n          message: message.message,\n          date: new Date(message.time_stamp)\n        };\n      }));\n    }\n  }, [messages]);\n  const [screenSize, setScreenSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const cropContent = (content, maxLength) => {\n    return (content === null || content === void 0 ? void 0 : content.length) > maxLength ? content.slice(0, maxLength) + \"...\" : content;\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      if (window.innerWidth >= 763 && !selectedConversation && conversations) {\n        setSelectedConversation(conversations[0]);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [conversations, selectedConversation]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${screenSize.width >= 764 ? \"col-md-3\" : selectedConversation ? \"d-none\" : \"col-md-12\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.listGroupContainer,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: conversations.map(conversation => {\n                var _latestMessage;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `list-group-item ${classes.listGroupItem} ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversation_id) === conversation.conversation_id ? \"active\" : \"\"}`,\n                  onClick: () => handleConversationSelect(conversation),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: otherUsersName(conversation)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"latest-message\",\n                    children: cropContent((_latestMessage = latestMessage(conversation)) === null || _latestMessage === void 0 ? void 0 : _latestMessage.message, 80)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 12\n                  }, this)]\n                }, conversation.conversation_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 11\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${selectedConversation && screenSize.width < 764 ? \"col-md-12\" : \"col-md-9 d-none d-md-block\"}`,\n          children: [selectedConversation ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: [screenSize.width < 764 && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: () => {\n                setSelectedConversation(null);\n              },\n              children: \"\\u2B05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: otherUsersName(selectedConversation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"View Item Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No Messages to Display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.messagingPanel,\n            children: [selectedConversation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.messageContainer,\n              children: messages.filter(message => message.conversation_id === selectedConversation.conversation_id).sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp)).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [message.sender_first_name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 15\n                  }, this), \" \", message.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 14\n                }, this)\n              }, message.message_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `input-group mt-3 ${classes.inputGroup}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Type your message here...\",\n                value: newMessage,\n                onChange: e => {\n                  if (selectedConversation) {\n                    setNewMessage(e.target.value);\n                  }\n                },\n                onKeyDown: e => {\n                  if (e.key === \"Enter\") {\n                    sendMessage();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: sendMessage,\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(MessagePanel, \"yqx5a5Dbvz5Jc/IpEjRVcAWFblo=\", false, function () {\n  return [useUser];\n});\n_c = MessagePanel;\nexport default MessagePanel;\nvar _c;\n$RefreshReg$(_c, \"MessagePanel\");","map":{"version":3,"names":["React","useState","useEffect","classes","io","axios","v4","uuidv4","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","MessagePanel","_s","userId","setUserId","newMessage","setNewMessage","conversations","setConversations","messages","setMessages","loading","setLoading","selectedConversation","setSelectedConversation","userData","setUserData","socket","setSocket","newSocket","query","on","msg","console","log","fetchUserData","response","get","params","signedInUserID","data","error","fetchData","conversationsResponse","messagesResponse","Promise","all","window","innerWidth","handleConversationSelect","conversation","latestMessage","conversationMessages","filter","message","conversation_id","sort","a","b","Date","time_stamp","length","otherUsersName","userid1","user2_first_name","user2_last_name","user1_first_name","user1_last_name","sendMessage","trim","post","senderID","recieverID","userid2","message_id","toString","receiver_first_name","receiver_id","receiver_last_name","sender_first_name","first_name","sender_id","sender_last_name","last_name","toISOString","emit","map","date","screenSize","setScreenSize","width","height","innerHeight","cropContent","content","maxLength","slice","handleResize","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","listGroupContainer","_latestMessage","listGroupItem","onClick","header","href","messagingPanel","messageContainer","inputGroup","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/mglm8/OneDrive/Desktop/Winter 2024/CPS630/project/CPS630-Project/frontend/src/components/messages/MessagePanel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport classes from \"./MessagePanel.module.css\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useUser } from \"../../userContext\";\r\n\r\nconst MessagePanel = () => {\r\n\tconst { userId, setUserId } = useUser();\r\n\tconst [newMessage, setNewMessage] = useState(\"\");\r\n\tconst [conversations, setConversations] = useState(null);\r\n\tconst [messages, setMessages] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [selectedConversation, setSelectedConversation] = useState(null);\r\n\tconst [userData, setUserData] = useState(null);\r\n\tconst [socket, setSocket] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newSocket = io(\"http://localhost:8080\", {\r\n\t\t\tquery: {\r\n\t\t\t\tuserId: userId,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tnewSocket.on(\"confirmation\", (msg) => {\r\n\t\t\tconsole.log(msg);\r\n\t\t});\r\n\r\n\t\tnewSocket.on(\"newMessage\", (msg) => {\r\n\t\t\tsetMessages([...messages, msg]);\r\n\t\t});\r\n\r\n\t\tsetSocket(newSocket);\r\n\r\n\t\t// return () => {\r\n\t\t//   newSocket.disconnect();\r\n\t\t// };\r\n\t}, [userId, messages]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUserData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get(\"http://localhost:8080/api/profile/details\", {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsignedInUserID: userId,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tsetUserData(response.data[0]);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching user data:\", error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchUserData();\r\n\t}, [userId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst [conversationsResponse, messagesResponse] = await Promise.all([\r\n\t\t\t\t\taxios.get(\"http://localhost:8080/api/messages/conversations\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsignedInUserID: userId,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t\taxios.get(\"http://localhost:8080/api/messages/messages\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsignedInUserID: userId,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tsetConversations(conversationsResponse.data);\r\n\t\t\t\tsetMessages(messagesResponse.data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetSelectedConversation(window.innerWidth >= 764 ? conversationsResponse.data[0] : null);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching data:\", error);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (userData) {\r\n\t\t\tfetchData();\r\n\t\t}\r\n\t}, [userId, userData]);\r\n\r\n\tconst handleConversationSelect = (conversation) => {\r\n\t\tsetSelectedConversation(conversation);\r\n\t};\r\n\r\n\tconst latestMessage = (conversation) => {\r\n\t\tlet conversationMessages = messages.filter((message) => message.conversation_id === conversation.conversation_id);\r\n\t\treturn conversationMessages.sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp))[\r\n\t\t\tconversationMessages.length - 1\r\n\t\t];\r\n\t};\r\n\r\n\tconst otherUsersName = (conversation) => {\r\n\t\treturn conversation.userid1 === userId\r\n\t\t\t? conversation.user2_first_name + \" \" + conversation.user2_last_name\r\n\t\t\t: conversation.user1_first_name + \" \" + conversation.user1_last_name;\r\n\t};\r\n\r\n\tconst sendMessage = async () => {\r\n\t\tif (newMessage.trim() === \"\") return;\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post(\"http://localhost:8080/api/messages/messages\", {\r\n\t\t\t\tconversation_id: selectedConversation.conversation_id,\r\n\t\t\t\tmessage: newMessage,\r\n\t\t\t\tsenderID: userId,\r\n\t\t\t\trecieverID:\r\n\t\t\t\t\tuserId === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error uploading message:\", error);\r\n\t\t}\r\n\r\n\t\tconst message = {\r\n\t\t\tconversation_id: selectedConversation.conversation_id,\r\n\t\t\tmessage: newMessage,\r\n\t\t\tmessage_id: uuidv4().toString(),\r\n\t\t\treceiver_first_name:\r\n\t\t\t\tselectedConversation.userid1 === userId\r\n\t\t\t\t\t? selectedConversation.user2_first_name\r\n\t\t\t\t\t: selectedConversation.user1_first_name,\r\n\t\t\treceiver_id:\r\n\t\t\t\tuserId === selectedConversation.userid1 ? selectedConversation.userid2 : selectedConversation.userid1,\r\n\t\t\treceiver_last_name:\r\n\t\t\t\tselectedConversation.userid1 === userId\r\n\t\t\t\t\t? selectedConversation.user2_last_name\r\n\t\t\t\t\t: selectedConversation.user1_last_name,\r\n\t\t\tsender_first_name: userData.first_name,\r\n\t\t\tsender_id: userId,\r\n\t\t\tsender_last_name: userData.last_name,\r\n\t\t\ttime_stamp: new Date().toISOString(),\r\n\t\t};\r\n\r\n\t\tsocket.emit(\"message\", message);\r\n\t\tsetMessages([...messages, message]);\r\n\t\t// console.log(messages.filter((message) => message.conversation_id === selectedConversation.conversation_id)\r\n\t\t// .sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp)))\r\n\t\t// console.log(messages)\r\n\t\tsetNewMessage(\"\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (messages) {\r\n\t\t\tconsole.log(\r\n\t\t\t\tmessages\r\n\t\t\t\t\t.filter((message) => message.conversation_id === selectedConversation.conversation_id)\r\n\t\t\t\t\t.map((message) => {\r\n\t\t\t\t\t\treturn { message: message.message, date: new Date(message.time_stamp) };\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}, [messages]);\r\n\r\n\tconst [screenSize, setScreenSize] = useState({\r\n\t\twidth: window.innerWidth,\r\n\t\theight: window.innerHeight,\r\n\t});\r\n\r\n\tconst cropContent = (content, maxLength) => {\r\n\t\treturn content?.length > maxLength ? content.slice(0, maxLength) + \"...\" : content;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetScreenSize({\r\n\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t});\r\n\t\t\tif (window.innerWidth >= 763 && !selectedConversation && conversations) {\r\n\t\t\t\tsetSelectedConversation(conversations[0]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\r\n\t\t// Clean up the event listener when the component unmounts\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t};\r\n\t}, [conversations, selectedConversation]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div>Loading...</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className={`${screenSize.width >= 764 ? \"col-md-3\" : selectedConversation ? \"d-none\" : \"col-md-12\"}`}>\r\n\t\t\t\t\t\t\t<h2>Conversations</h2>\r\n\t\t\t\t\t\t\t<div className={classes.listGroupContainer}>\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t{conversations.map((conversation) => (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tkey={conversation.conversation_id}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`list-group-item ${classes.listGroupItem} ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedConversation?.conversation_id === conversation.conversation_id ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleConversationSelect(conversation)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{otherUsersName(conversation)}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"latest-message\">{cropContent(latestMessage(conversation)?.message, 80)}</div>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\t\tselectedConversation && screenSize.width < 764 ? \"col-md-12\" : \"col-md-9 d-none d-md-block\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{selectedConversation ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t\t\t\t{screenSize.width < 764 && (\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedConversation(null);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t&#x2B05;\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<h2>{otherUsersName(selectedConversation)}</h2>\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">View Item Details</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t\t\t\t\t<h2>No Messages to Display</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className={classes.messagingPanel}>\r\n\t\t\t\t\t\t\t\t{selectedConversation && (\r\n\t\t\t\t\t\t\t\t\t<div className={classes.messageContainer}>\r\n\t\t\t\t\t\t\t\t\t\t{messages\r\n\t\t\t\t\t\t\t\t\t\t\t.filter((message) => message.conversation_id === selectedConversation.conversation_id)\r\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => new Date(a.time_stamp) - new Date(b.time_stamp))\r\n\t\t\t\t\t\t\t\t\t\t\t.map((message) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={message.message_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{message.sender_first_name}:</strong> {message.message}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div className={`input-group mt-3 ${classes.inputGroup}`}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type your message here...\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={newMessage}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (selectedConversation) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetNewMessage(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsendMessage();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={sendMessage}>\r\n\t\t\t\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MessagePanel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}